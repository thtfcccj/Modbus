/*******************************************************************************

             多个Modbus时,所需硬件定时器(RTU模式)在有1Ms定时任务中的实现

*******************************************************************************/
#ifndef __MODBUS_M_HW_1MS_H
#define __MODBUS_M_HW_1MS_H

/*******************************************************************************
                              相关配置
*******************************************************************************/


/*******************************************************************************
                              相关结构
*******************************************************************************/
#include "Modbus.h"
struct _Modbus_mHw1Ms{
  unsigned char Ms;  //Ms定时器
  unsigned char Ov;  //3.5个字符的溢出值
  struct _Modbus *pModbus;
};

/*******************************************************************************
                              相关函数
*******************************************************************************/

//-----------------------------初始化函数-----------------------------
void Modbus_mHw1Ms_Init(struct _Modbus_mHw1Ms *pHw1Ms,
                         struct _Modbus *pModbus);

//-------------------------由波特率更新溢出值函数-----------------------------
void Modbus_mHw1Ms_UpdateOv(struct _Modbus_mHw1Ms *pHw1Ms,
                            unsigned long Buad);//波特率

//-------------------------------任务函数-------------------------------
//放入1ms或<1ms进程或中断内
void Modbus_mHw1Ms_Task(struct _Modbus_mHw1Ms *pHw1Ms);

/*******************************************************************************
                            回调函数
*******************************************************************************/

//-------------------------由Modbus指针得到结构函数----------------------------
//一般通过pModbus->pVoid可快速获得
struct _Modbus_mHw1Ms *Modbus_mHw1Ms_cbpGet(struct _Modbus *pModbus);



#endif
